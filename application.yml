info:
  description: Cai Cloud Sample 11
  url: https://github.com/cai-cloud/config-repo

logging:
  config: classpath:config/log4j2-spring.xml

#datasource
druid.datasource.driverClassName=com.mysql.jdbc.Driver
druid.datasource.url=jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=UTF-8
druid.datasource.username=root
druid.datasource.password=111111
#初始化连接数量，最大最小连接数
druid.datasource.initialSize=5
druid.datasource.maxActive=10
druid.datasource.minIdle=3
#获取连接等待超时的时间
druid.datasource.maxWait=60000
#超过时间限制是否回收
druid.datasource.removeAbandoned=true
#超过时间限制多长
druid.datasource.removeAbandonedTimeout=180
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
druid.datasource.timeBetweenEvictionRunsMillis=60000
#配置一个连接在池中最小生存的时间，单位是毫秒
druid.datasource.minEvictableIdleTimeMillis=300000
#用来检测连接是否有效的sql，要求是一个查询语句
druid.datasource.validationQuery=SELECT 1 FROM DUAL
#申请连接的时候检测
druid.datasource.testWhileIdle=true
#申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能
druid.datasource.testOnBorrow=false
#归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能
druid.datasource.testOnReturn=false
#打开PSCache，并且指定每个连接上PSCache的大小
druid.datasource.poolPreparedStatements=true
druid.datasource.maxPoolPreparedStatementPerConnectionSize=50
#属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
#监控统计用的filter:stat, 日志用的filter:log4j, 防御SQL注入的filter:wall
druid.datasource.filters=stat
